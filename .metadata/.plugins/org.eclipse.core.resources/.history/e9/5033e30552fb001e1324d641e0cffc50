package dao;

public class DichVuPhongDao {
	ArrayList<DichVuPhong> dsDichVu = new ArrayList();
    DichVuPhong dvp;
    DichVuDao dvDao = new DichVuDao();
    PhongDao phongDao = new PhongDao();
    LoaiPhongDao loaiPhongDao = new LoaiPhongDao();
    ArrayList<Double> arGia = new ArrayList();

    public DichVuPhongDao() {
        this.dsDichVu = new ArrayList();
        this.dvp = new DichVuPhong();
    }

    public ArrayList<DichVuPhong> timTatCacDichVuPhong() {
        try {
            ConnectDB.getInstance();
            Connection con = ConnectDB.getConnection();
            String sql = "Select * from DichVuPhong";
            Statement statement = con.createStatement();
            ResultSet rs = statement.executeQuery(sql);

            while(rs.next()) {
                String maDV = rs.getString(1);
                String maPhong = rs.getString(2);
                int soLuong = rs.getInt(3);
                this.dvp = new DichVuPhong(maDV, maPhong, soLuong);
                this.dsDichVu.add(this.dvp);
            }
        } catch (Exception var8) {
            var8.printStackTrace();
        }

        return this.dsDichVu;
    }

    public ArrayList<DichVuPhong> timTheoMaDichVuPhong(String maDV) {
        try {
            ConnectDB.getInstance();
            Connection con = ConnectDB.getConnection();
            String sql = "Select * from DichVuPhong where maDV = '" + maDV + "'";
            Statement statement = con.createStatement();
            ResultSet rs = statement.executeQuery(sql);

            while(rs.next()) {
                String maDV1 = rs.getString(1);
                String maPhong = rs.getString(2);
                int soLuong = rs.getInt(3);
                this.dvp = new DichVuPhong(maDV1, maPhong, soLuong);
                this.dsDichVu.add(this.dvp);
            }
        } catch (Exception var9) {
            var9.printStackTrace();
        }

        return this.dsDichVu;
    }

    public boolean themDichVuPhong(DichVuPhong dvp) {
        try {
            ConnectDB.getInstance();
            Connection con = ConnectDB.getConnection();
            Statement stmt = con.createStatement();
            String var10000 = dvp.getMaPhong();
            String sql = "insert into DichVuPhong values('" + var10000 + "','" + dvp.getMaDichVu() + "'," + dvp.getSoLuong() + ")";
            stmt.executeUpdate(sql);
            return true;
        } catch (Exception var5) {
            var5.printStackTrace();
            return false;
        }
    }

    public boolean suaDichVuPhong(DichVuPhong dvp) {
        try {
            ConnectDB.getInstance();
            Connection con = ConnectDB.getConnection();
            Statement stmt = con.createStatement();
            int var10000 = dvp.getSoLuong();
            String sql = "update DichVuPhong set soLuong = " + var10000 + " where maPhong = '" + dvp.getMaPhong() + "' and maDV = '" + dvp.getMaDichVu() + "'";
            stmt.executeUpdate(sql);
            return true;
        } catch (Exception var5) {
var5.printStackTrace();
            return false;
        }
    }

    public double tinhGiaDichVuCuaMotPhong(String maPhong) {
        try {
            ConnectDB.getInstance();
            Connection con = ConnectDB.getConnection();
            String sql = "Select * from DichVuPhong where maPhong = '" + maPhong + "'";
            Statement statement = con.createStatement();
            ResultSet rs = statement.executeQuery(sql);

            while(rs.next()) {
                String maDV = rs.getString(1);
                String maPhong1 = rs.getString(2);
                double gia = this.dvDao.timTheoMaDichVu(maDV).getGiaDV();
                int soLuong = rs.getInt(3);
                this.dvp = new DichVuPhong(maDV, maPhong1, soLuong);
                this.arGia.add(gia * (double)soLuong);
            }
        } catch (Exception var11) {
            var11.printStackTrace();
        }

        double giaTong = 0.0;

        Double double1;
        for(Iterator var14 = this.arGia.iterator(); var14.hasNext(); giaTong += double1) {
            double1 = (Double)var14.next();
        }

        return giaTong;
    }
}
