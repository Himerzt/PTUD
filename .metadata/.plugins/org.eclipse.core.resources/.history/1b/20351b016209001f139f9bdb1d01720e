package dao;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import connectDB.ConnectDB;
import entity.DichVu;
import entity.DichVuPhong;

public class DichVuPhongDao {
	ArrayList<DichVuPhong> dsDichVu = new ArrayList();
	DichVuPhong dvp;
	DichVuDao dvDao = new DichVuDao();
	PhongDao phongDao = new PhongDao();
	LoaiPhongDao loaiPhongDao = new LoaiPhongDao();
	ArrayList<Double> arGia = new ArrayList();

	public DichVuPhongDao() {
		this.dsDichVu = new ArrayList();
		this.dvp = new DichVuPhong ();
	}

	public ArrayList<DichVuPhong> timTatCacDichVuSuDung() {
		try {
			ConnectDB.getInstance();
			Connection con = ConnectDB.getConnection();
			String sql = "Select * from DichVuSuDung";
			Statement statement = con.createStatement();
			ResultSet rs = statement.executeQuery(sql);

			while (rs.next()) {
				String maDichVuSuDung = rs.getString(1);
				String maPhong1 = rs.getString(2);
				String maDichVu = rs.getString(3);
				int soLuong = rs.getInt(4);
				dvp = new DichVuPhong(maDichVuSuDung, maPhong1, maDichVu, soLuong);
				dsDichVu.add(dvp);
			}
		} catch (Exception var8) {
			var8.printStackTrace();
		}

		return this.dsDichVu;
	}

	public ArrayList<DichVuPhong> timTheoMaDichVuSuDung(String maDV) {
		try {
			ConnectDB.getInstance();
			Connection con = ConnectDB.getConnection();
			String sql = "Select * from DichVuSuDung where maDV = '" + maDV + "'";
			Statement statement = con.createStatement();
			ResultSet rs = statement.executeQuery(sql);

			while (rs.next()) {
				String maDichVuSuDung = rs.getString(1);
				String maPhong1 = rs.getString(2);
				String maDichVu = rs.getString(3);
				int soLuong = rs.getInt(4);
				dvp = new DichVuPhong(maDichVuSuDung,maPhong1  , maDichVu, soLuong);
				dsDichVu.add(dvp);
			}
		} catch (Exception var9) {
			var9.printStackTrace();
		}

		return this.dsDichVu;
	}

	public boolean themDichVuSuDung(DichVuPhong dvp) {
		try {
			ConnectDB.getInstance();
			Connection con = ConnectDB.getConnection();
			Statement stmt = con.createStatement();
			int maDVSD = timTatCacDichVuSuDung().size() + 1;
			String sql = "insert into DichVuSuDung values('" + maDVSD + "','" + dvp.getMaDichVu() + "',"
					+ dvp.getSoluong() + ")";
			stmt.executeUpdate(sql);
			return true;
		} catch (Exception var5) {
			var5.printStackTrace();
			return false;
		}
	}

	public boolean suaDichVuSuDung(DichVuPhong dvp) {
		try {
			ConnectDB.getInstance();
			Connection con = ConnectDB.getConnection();
			Statement stmt = con.createStatement();
			int var10000 = dvp.getSoluong();
			String sql = "update DichVuSuDung set soLuong = " + var10000 + " where maPhong = '" + dvp.getMaphong()
					+ "' and maDV = '" + dvp.getMaDichVu() + "'";
			stmt.executeUpdate(sql);
			return true;
		} catch (Exception var5) {
			var5.printStackTrace();
			return false;
		}
	}

	public double tinhGiaDichVuCuaMotPhong(String maPhong) {
		try {
			ConnectDB.getInstance();
			Connection con = ConnectDB.getConnection();
			String sql = "Select * from DichVuSuDung where maPhong = '" + maPhong + "'";
			Statement statement = con.createStatement();
			ResultSet rs = statement.executeQuery(sql);

			while (rs.next()) {
				String maDichVuSuDung = rs.getString(1);
				String maPhong1 = rs.getString(2);
				String maDichVu = rs.getString(3);
				int soLuong = rs.getInt(4);
				dvp = new DichVuPhong(maDichVuSuDung, maPhong1, maDichVu, soLuong);
				dsDichVu.add(dvp);
			}
		} catch (Exception var11) {
			var11.printStackTrace();
		}

		double giaTong = 0.0;

		for (Double double1 : arGia) {
			giaTong += double1;
		}

		return giaTong;
	}

	// thêm danh sach dih vu phong


	public List<DichVuPhong> timDichVuSuDungTheoMaPhong(ArrayList<String> dsPhong) {
		ArrayList<DichVuPhong> dsDV = new ArrayList<DichVuPhong>();
		try {
			Connection con = ConnectDB.getConnection();
			for (String maPhong : dsPhong) {
				String sql = "Select * from DichVuSuDung where maPhong = '" + maPhong + "'";
				Statement statement = con.createStatement();
				ResultSet rs = statement.executeQuery(sql);
				while (rs.next()) {
					String maDichVuSuDung = rs.getString(1);
					String maPhong1 = rs.getString(2);
					String maDichVu = rs.getString(3);
					int soLuong = rs.getInt(4);
					dvp = new DichVuPhong(maDichVuSuDung, maPhong1, maDichVu, soLuong);
					dsDV.add(dvp);
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return dsDV;
	}

	public DichVu timTheoMaDichVu(String maDV) {
		try {
            Connection con = ConnectDB.getConnection();
            String sql = "Select * from DichVu where maDV = '" + maDV + "'";
            Statement statement = con.createStatement();
            ResultSet rs = statement.executeQuery(sql);
            if (rs.next()) {
                String maDV1 = rs.getString(1);
                String tenDV = rs.getString(2);
                double giaDV = rs.getDouble(3);
                DichVu dv = new DichVu(maDV1, tenDV, giaDV);
                return dv;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return null;
	}

	public double tinhTienTheoMaDichVu(String maDV) {
		try {
			ConnectDB.getInstance();
			Connection con = ConnectDB.getConnection();
			String sql = "Select * from DichVuSuDung where maDV = '" + maDV + "'";
			Statement statement = con.createStatement();
			ResultSet rs = statement.executeQuery(sql);
			while (rs.next()) {
				String maDichVuSuDung = rs.getString(1);
				String maPhong1 = rs.getString(2);
				String maDichVu = rs.getString(3);
				int soLuong = rs.getInt(4);
				dvp = new DichVuPhong(maDichVuSuDung, maPhong1, maDichVu, soLuong);
				dsDichVu.add(dvp);
			}
		} catch (Exception var11) {
			var11.printStackTrace();
		}
		double giaTong = 0.0;

		for (Double double1 : arGia) {
			giaTong += double1;
		}

		return giaTong;
	}
	
	
	// đếm số lượng dịch vụ phòng theo mã phòng
	public int demSoLuongDichVuSuDungTheoMaPhong(String maPhong) {
		int count = 0;
		try {
			ConnectDB.getInstance();
			Connection con = ConnectDB.getConnection();
			String sql = "Select * from DichVuSuDung where maPhong = '" + maPhong + "'";
			Statement statement = con.createStatement();
			ResultSet rs = statement.executeQuery(sql);
			while (rs.next()) {
				count++;
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return count;
	}
	
	
// thêm dịch vụ phòng
	public boolean themDichVuPhong(DichVuPhong dvp) {
		try {
			ConnectDB.getInstance();
			Connection con = ConnectDB.getConnection();
			Statement stmt = con.createStatement();
			int maDVSD = timTatCacDichVuSuDung().size() + 1;
			String sql = "insert into DichVuSuDung values('" + maDVSD + "','" + dvp.getMaphong() + "','"
					+ dvp.getMaDichVu() + "'," + dvp.getSoluong() + ")";
			stmt.executeUpdate(sql);
			return true;
		} catch (Exception e) {
			e.printStackTrace();
			return false;
		}
	}

	// sửa dịch vụ phòng
	public boolean suaDichVuPhong(DichVuPhong dvp) {
		try {
			ConnectDB.getInstance();
			Connection con = ConnectDB.getConnection();
			Statement stmt = con.createStatement();
			int soLuong = dvp.getSoluong();
			String sql = "update DichVuSuDung set soLuong = " + soLuong + " where maPhong = '" + dvp.getMaphong()
					+ "' and maDV = '" + dvp.getMaDichVu() + "'";
			stmt.executeUpdate(sql);
			return true;
		} catch (Exception e) {
			e.printStackTrace();
			return false;
		}
	}

	// xóa dịch vụ phòng
	public boolean xoaDichVuPhong(String maPhong, String maDV) {
        try {
            ConnectDB.getInstance();
            Connection con = ConnectDB.getConnection();
            Statement stmt = con.createStatement();
            String sql = "delete from DichVuSuDung where maPhong = '" + maPhong + "' and maDV = '" + maDV + "'";
            stmt.executeUpdate(sql);
            return true;
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
    }

	
	
}
