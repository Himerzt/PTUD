/*

 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package giaodien;

import dao.NhanVienDao;
import dao.TaiKhoanDao;
import entity.TaiKhoan;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author TheKhoiTran
 */
public class DanhSachNhanVien_GUI extends javax.swing.JPanel {

    /**
     * Creates new form DanhSachNhanVienFix
     */
    public DanhSachNhanVien_GUI() {
        initComponents();
        loadTableDanhSachNhanVien();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        danhSachNhanVien = new javax.swing.JTable();
        btnCapLaiMatKhau = new giaodien.CustomClass.Button();
        txtHoTen = new giaodien.CustomClass.TextFieldShadow();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnTimKiem = new giaodien.CustomClass.Button();
        btnCapNhat = new giaodien.CustomClass.Button();
        btnThem = new giaodien.CustomClass.Button();
        panelRound4 = new giaodien.custom2.PanelRound();
        cbChucVu = new giaodien.CustomClass.Combobox();
        btnReset = new giaodien.CustomClass.Button();

        jPanel7.setBackground(new java.awt.Color(204, 204, 204));

        danhSachNhanVien.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        danhSachNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã nhân viên", "Họ tên", "Ngày sinh", "Giới tính", "Số điện thoại", "Email", "CCCD", "Địa chỉ", "Chức vụ", "Ngày vào làm"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        danhSachNhanVien.setRowHeight(40);
        jScrollPane1.setViewportView(danhSachNhanVien);

        btnCapLaiMatKhau.setText("Cấp lại mật khẩu");
        btnCapLaiMatKhau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapLaiMatKhauActionPerformed(evt);
            }
        });

        txtHoTen.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel1.setText("Họ tên");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel2.setText("Chức vụ");

        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        btnCapNhat.setText("Cập nhật");
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        panelRound4.setBackground(new java.awt.Color(255, 255, 255));
        panelRound4.setRoundBottomLeft(15);
        panelRound4.setRoundBottomRight(15);
        panelRound4.setRoundTopLeft(15);
        panelRound4.setRoundTopRight(15);

        cbChucVu.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Quản lý", "Nhân viên" }));
        cbChucVu.setSelectedIndex(-1);
        cbChucVu.setLabeText("");

        javax.swing.GroupLayout panelRound4Layout = new javax.swing.GroupLayout(panelRound4);
        panelRound4.setLayout(panelRound4Layout);
        panelRound4Layout.setHorizontalGroup(
            panelRound4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound4Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(cbChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        panelRound4Layout.setVerticalGroup(
            panelRound4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound4Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(cbChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgLogin/reset.png"))); // NOI18N
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1183, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jLabel2)
                        .addGap(33, 33, 33)
                        .addComponent(panelRound4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCapLaiMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnReset, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCapLaiMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addComponent(panelRound4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1520, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 790, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCapLaiMatKhauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapLaiMatKhauActionPerformed
        // Lấy hàng được chọn từ bảng DanhSachNhanVien
        int selectedRow = danhSachNhanVien.getSelectedRow();

        // Kiểm tra xem có hàng nào được chọn không
        if (selectedRow != -1) {
            // Lấy mã nhân viên từ cột 2 (index 1) của hàng được chọn
            String maNhanVien = danhSachNhanVien.getValueAt(selectedRow, 1).toString();

            // Lấy tên nhân viên từ cột 3 (index 2) của hàng được chọn
            String tenNhanVien = danhSachNhanVien.getValueAt(selectedRow, 2).toString();

            // Hiển thị hộp thoại xác nhận với thông tin nhân viên đã chọn
            int option = JOptionPane.showConfirmDialog(null, "Bạn muốn cấp lại mật khẩu cho nhân viên có mã " + maNhanVien + " - " + tenNhanVien + " ?", "Xác nhận", JOptionPane.OK_CANCEL_OPTION);
            if (option == JOptionPane.OK_OPTION) {

                // Tạo đối tượng TaiKhoanDao để sử dụng hàm suaTaiKhoan
                TaiKhoanDao taiKhoanDao = new TaiKhoanDao();

                // Tạo đối tượng TaiKhoan mới với mật khẩu mặc định
                TaiKhoan taiKhoan = new  TaiKhoan();
                taiKhoan.setTenDangNhap(maNhanVien);
                taiKhoan.setMatKhau("123456789"); // Mật khẩu mặc định

                // Gọi hàm suaTaiKhoan để cập nhật mật khẩu mới
                boolean capLaiThanhCong = taiKhoanDao.suaTaiKhoan(taiKhoan);

                if (capLaiThanhCong) {
                    JOptionPane.showMessageDialog(null, "Đã cấp lại mật khẩu cho nhân viên có mã " + maNhanVien);
                } else {
                    JOptionPane.showMessageDialog(null, "Có lỗi xảy ra. Không thể cấp lại mật khẩu cho nhân viên có mã " + maNhanVien);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn nhân viên từ bảng để cấp lại mật khẩu.");
        }
    }//GEN-LAST:event_btnCapLaiMatKhauActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // Nhận dữ liệu từ ô textfield và combobox
        String hoTenCanTim = txtHoTen.getText().trim().toLowerCase(); // Chuyển đổi tên cần tìm sang chữ thường
        String chucVuCanTim = "";

        if (cbChucVu.getSelectedIndex() != -1) {
            chucVuCanTim = cbChucVu.getSelectedItem().toString();
            // Chuyển đổi dữ liệu combobox sang định dạng tương ứng với dữ liệu trong cơ sở dữ liệu
            if (chucVuCanTim.equals("Nhân viên")) {
                chucVuCanTim = "NV";
            } else if (chucVuCanTim.equals("Quản lý")) {
                chucVuCanTim = "QL";
            }
        }

        // Lấy danh sách nhân viên từ cơ sở dữ liệu
        NhanVienDao nhanVienDao = new NhanVienDao();
        ArrayList<entity.NhanVien> dsNhanVien = nhanVienDao.timTatCaNhanVien();

        // Xóa dữ liệu hiện có trong bảng
        DefaultTableModel model = (DefaultTableModel) danhSachNhanVien.getModel();
        model.setRowCount(0);

        // Duyệt qua danh sách nhân viên và so sánh họ tên và chức vụ
        for (int i = 0; i < dsNhanVien.size(); i++) {
            entity.NhanVien nv = dsNhanVien.get(i);
            String tenNhanVien = nv.getHoTenNV().toLowerCase(); // Chuyển đổi tên nhân viên sang chữ thường
            if ((hoTenCanTim.isEmpty() || tenNhanVien.contains(hoTenCanTim)) &&
                (chucVuCanTim.isEmpty() || nv.getChucVu().equalsIgnoreCase(chucVuCanTim))) {
                // Nếu họ tên và chức vụ khớp khớp, thêm nhân viên vào bảng
                Object[] rowData = {i + 1, nv.getMaNV(), nv.getHoTenNV(), nv.getNgaySinh(), nv.getGioiTinh(), nv.getSoDT(), nv.getEmail(), nv.getCCCD(), nv.getDiaChi(), nv.getChucVu(), nv.getNgayVaoLam()};
                model.addRow(rowData);
            } else if (!hoTenCanTim.isEmpty() && chucVuCanTim.isEmpty() && tenNhanVien.contains(hoTenCanTim)) {
                // Nếu chỉ có họ tên được nhập, thêm nhân viên vào bảng nếu họ tên chứa từ khóa tìm kiếm
                Object[] rowData = {i + 1, nv.getMaNV(), nv.getHoTenNV(), nv.getNgaySinh(), nv.getGioiTinh(), nv.getSoDT(), nv.getEmail(), nv.getCCCD(), nv.getDiaChi(), nv.getChucVu(), nv.getNgayVaoLam()};
                model.addRow(rowData);
            } else if (hoTenCanTim.isEmpty() && !chucVuCanTim.isEmpty() && nv.getChucVu().equalsIgnoreCase(chucVuCanTim)) {
                // Nếu chỉ có chức vụ được chọn, thêm nhân viên vào bảng nếu chức vụ khớp
                Object[] rowData = {i + 1, nv.getMaNV(), nv.getHoTenNV(), nv.getNgaySinh(), nv.getGioiTinh(), nv.getSoDT(), nv.getEmail(), nv.getCCCD(), nv.getDiaChi(), nv.getChucVu(), nv.getNgayVaoLam()};
                model.addRow(rowData);
            }
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        // Lấy chỉ số hàng được chọn
        int selectedRow = danhSachNhanVien.getSelectedRow();
        // Kiểm tra xem có hàng nào được chọn không
        if (selectedRow != -1) {
            // Lấy dữ liệu từ hàng được chọn
            String maNV = danhSachNhanVien.getValueAt(selectedRow, 1).toString();
            String hoTen = danhSachNhanVien.getValueAt(selectedRow, 2).toString();
            String ngaySinh = danhSachNhanVien.getValueAt(selectedRow, 3).toString();
            String gioiTinh = danhSachNhanVien.getValueAt(selectedRow, 4).toString();
            String soDT = danhSachNhanVien.getValueAt(selectedRow, 5).toString();
            String email = danhSachNhanVien.getValueAt(selectedRow, 6).toString();
            String CCCD = danhSachNhanVien.getValueAt(selectedRow, 7).toString();
            String diaChi = danhSachNhanVien.getValueAt(selectedRow, 8).toString();
            String chucVu = danhSachNhanVien.getValueAt(selectedRow, 9).toString();
            String ngayVaoLam = danhSachNhanVien.getValueAt(selectedRow, 10).toString();

            // Chuyển đổi giá trị chức vụ từ NV và QL sang Nhân viên và Quản lý
            if(chucVu.equals("NV")) {
                chucVu = "Nhân viên";
            } else if(chucVu.equals("QL")) {
                chucVu = "Quản lý";
            }
            // Tạo đối tượng CapNhatNhanVien và truyền dữ liệu
            CapNhatNhanVien_GUI capNhatNhanVien = new CapNhatNhanVien_GUI();
            capNhatNhanVien.setData(maNV, hoTen, ngaySinh, gioiTinh, soDT, email, CCCD, diaChi, chucVu, ngayVaoLam);
            capNhatNhanVien.setVisible(true);
        } else {
            // Hiển thị thông báo nếu không có hàng nào được chọn
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một hàng để cập nhật.");
        }
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        ThemNhanVien_GUI themNhanVien = new ThemNhanVien_GUI();
        themNhanVien.setVisible(true);
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        loadTableDanhSachNhanVien();
    }//GEN-LAST:event_btnResetActionPerformed
    public void loadTableDanhSachNhanVien() {
        NhanVienDao nhanVienDao = new NhanVienDao();
        ArrayList<entity.NhanVien> dsNhanVien = nhanVienDao.timTatCaNhanVien();
        DefaultTableModel model = (DefaultTableModel) danhSachNhanVien.getModel();

        model.setRowCount(0);

        for (int i = 0; i < dsNhanVien.size(); i++) {
            entity.NhanVien nv = dsNhanVien.get(i);
            Object[] rowData = {i + 1, nv.getMaNV(), nv.getHoTenNV(), nv.getNgaySinh(), nv.getGioiTinh(), nv.getSoDT(), nv.getEmail(),nv.getCCCD(), nv.getDiaChi(),nv.getChucVu(), nv.getNgayVaoLam()};
            model.addRow(rowData);
        }
    }
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private giaodien.CustomClass.Button btnCapLaiMatKhau;
    private giaodien.CustomClass.Button btnCapNhat;
    private giaodien.CustomClass.Button btnReset;
    private giaodien.CustomClass.Button btnThem;
    private giaodien.CustomClass.Button btnTimKiem;
    private giaodien.CustomClass.Combobox cbChucVu;
    private javax.swing.JTable danhSachNhanVien;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private giaodien.custom2.PanelRound panelRound4;
    private giaodien.CustomClass.TextFieldShadow txtHoTen;
    // End of variables declaration//GEN-END:variables
}
